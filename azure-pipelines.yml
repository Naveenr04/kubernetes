# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
parameters:
- name: ResourceGroupName
  displayName: Resource Group Base Name
  type: string
  default: ChuckTh_PipelineTest
- name: ProfiseeAdminUserAccount
  displayName: Profisee Admin UserAccount
  type: string
  default: $[variables['Build.RequestedForEmail']]
- name: ProfiseeVersion
  displayName: Profisee Version
  type: string
  default: profiseeplatform:2021r2.0
  values:
  - profiseeplatform:2021r2.0
  - profiseeplatform:2021r3.preview
  - profiseeplatform:2021r3.mlpreview
- name: DNSHostName
  displayName: DNS Host Name
  type: string
  default: chucktest

variables:
  dtm: $[format('{0:MMddyyyyHHmmss}', pipeline.startTime)]
  email: $[variables['Build.RequestedForEmail']]
  emailclean: $[replace(variables['email'],'@','')]
  emailclean2: $[replace(variables['emailclean'],'.','')]

trigger: none

pool:
  vmImage: ubuntu-latest

steps:

- task: AzureResourceManagerTemplateDeployment@3
  inputs:
    deploymentScope: 'Resource Group'
    azureResourceManagerConnection: 'ProfiseeAzure'
    subscriptionId: '73814551-37dd-4143-a149-df9c2a2c97b6'
    action: 'Create Or Update Resource Group'
    resourceGroupName: '${{ parameters.ResourceGroupName }}_$(dtm)'
    location: 'East US 2'
    templateLocation: 'URL of the file'
    csmFileLink: 'https://raw.githubusercontent.com/profiseedev/kubernetes/master/Azure-ARM/azuredeploy.json'
    csmParametersFileLink: 'https://raw.githubusercontent.com/profiseedev/kubernetes/master/Azure-ARM/azuredeploy.parameters.json'
    deploymentMode: 'Complete'
    #"${{ parameters.ProfiseeAdminUserAccount }}"
    overrideParameters: >-
      -ProfiseeAdminUserAccount "$(emailclean2)" 
      -ProfiseeLicense "$(ProfiseeLicense)"
      -ManagedIdentityName $(ManagedIdentityName)
      -SQLServerName "$(SQLServerName)$(dtm)"
      -SQLServerUser "$(SqlServerUser)"
      -SQLServerPassword "$(SQLServerPassword)"
      -StorageAccountName "$(StorageAccountName)$(dtm)"
      -UseLetsEncrypt "$(UseLetsEncrypt)"
      -UseKeyVault "$(UseKeyVault)"
      -KeyVault "$(KeyVault)"
      -DNSUpdate "$(DNSUpdate)"
      -DNSHostName "${{ parameters.DNSHostName }}"
      -DNSDomainName "$(DNSDomainName)"
      -DNSDomainResourceGroup "$(DNSDomainResourceGroup)"
      -HttpsConfigure "$(HttpsConfigure)"
      -HttpsCertificate "$(HttpsCertificate)"
      -HttpsCertificatePrivateKey "$(HttpsCertificatePrivateKey)"
      -KubernetesLinuxNodeSize "$(KubernetesLinuxNodeSize)"
      -KubernetesWindowsNodeSize "$(KubernetesWindowsNodeSize)"
      -ProfiseeVersion "${{ parameters.ProfiseeVersion }}"
      -KubernetesVersion "$(KubernetesVersion)"



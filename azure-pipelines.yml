# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
parameters:
- name: ProfiseeAdminUserAccount
  displayName: ProfiseeAdminUserAccount
  type: string
  default: chuck.thompson@profisee.com
- name: ProfiseeVersion
  displayName: ProfiseeVersion
  type: string
  default: profiseeplatform:2021r2.0
  values:
  - profiseeplatform:2021r2.0
  - profiseeplatform:2021r3.preview
  - profiseeplatform:2021r3.mlpreview
- name: DNSHostName
  displayName: DNSHostName
  type: string
  default: chucktest

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- task: AzureResourceManagerTemplateDeployment@3
  inputs:
    deploymentScope: 'Resource Group'
    azureResourceManagerConnection: 'ProfiseeAzure'
    subscriptionId: '73814551-37dd-4143-a149-df9c2a2c97b6'
    action: 'Create Or Update Resource Group'
    resourceGroupName: 'ChuckTh_PipelineTest'
    location: 'East US 2'
    templateLocation: 'URL of the file'
    csmFileLink: 'https://raw.githubusercontent.com/profiseedev/kubernetes/master/Azure-ARM/azuredeploy.json'
    csmParametersFileLink: 'https://raw.githubusercontent.com/profiseedev/kubernetes/master/Azure-ARM/azuredeploy.parameters.json'
    deploymentMode: 'Complete'
    overrideParameters: >-
      -ProfiseeAdminUserAccount "${{ parameters.ProfiseeAdminUserAccount }}"
      -ProfiseeLicense "$(ProfiseeLicense)"
      -ManagedIdentityName $(ManagedIdentityName)
      -SQLServerName "$(SQLServerName)"
      -SQLServerUser "$(SqlServerUser)"
      -SQLServerPassword "$(SQLServerPassword)"
      -StorageAccountName "$(StorageAccountName)"
      -UseLetsEncrypt "$(UseLetsEncrypt)"
      -UseKeyVault "$(UseKeyVault)"
      -KeyVault "$(KeyVault)"
      -DNSUpdate "$(DNSUpdate)"
      -DNSHostName "${{ parameters.DNSHostName }}"
      -DNSDomainName "$(DNSDomainName)"
      -DNSDomainResourceGroup "$(DNSDomainResourceGroup)"
      -HttpsConfigure "$(HttpsConfigure)"
      -HttpsCertificate "$(HttpsCertificate)"
      -HttpsCertificatePrivateKey "$(HttpsCertificatePrivateKey)"
      -KubernetesLinuxNodeSize "$(KubernetesLinuxNodeSize)"
      -KubernetesWindowsNodeSize "$(KubernetesWindowsNodeSize)"
      -ProfiseeVersion "${{ parameters.ProfiseeVersion }}"
      -KubernetesVersion "$(KubernetesVersion)"


